version: "3.4"

services:
   keycloak-db:
      image: postgres:13
      environment:
        POSTGRES_DB: keycloak
        POSTGRES_USER: keycloak
        POSTGRES_PASSWORD: test
      restart: always
      networks:
         - main-network
      ports:
         - "5432:5430" # NB: for debugging only
      expose:
         - "5432"

   keycloak:
      image: bitnami/keycloak:12.0.2
      # TODO:
      #     * create realm
      #     * set realm private key
      #     * get realm public key ("realm settings" -> "keys")
      #        * convert: PEM to JWK
      #     * create client "frontend"
      #        * access type: "public"
      #        * set "redirect_uri"
      #     * create roles: "standard", "admin"
      #     * create users: 2 users "standard", 1 "admin".
      #        * remove all "required user actions",  # TODO: see "requiredActions" in "realm.json"
      #        * go to "credentials" and attribute a new password.
      #        * "Role Mappings": select your client "frontend" and add a "standard", or "admin" role.
      links:
         - keycloak-db:keycloak-db
      depends_on:
         - keycloak-db
      environment:
         KEYCLOAK_DATABASE_HOST: keycloak-db
         KEYCLOAK_DATABASE_PORT: 5432
         KEYCLOAK_DATABASE_USER: keycloak
         KEYCLOAK_DATABASE_PASSWORD: test
         KEYCLOAK_DATABASE_NAME: keycloak
         KEYCLOAK_ADMIN_USER: admin
         KEYCLOAK_ADMIN_PASSWORD: admin
         KEYCLOAK_HTTP_PORT: 8080
      ports:
         - "8080:8080"
      networks:
         - main-network

   keycloak-init:
      build: keycloak/init/.
      entrypoint:
         /bin/sh /keycloak-init.sh keycloak 8080
      networks:
         - main-network
      volumes:
         - ./keycloak/config/init-scripts/:/
      links:
         - keycloak
      depends_on:
         - keycloak

   # existing DB for Medusa
   # schema: https://github.com/medusajs/medusa/tree/master/packages/medusa/src/models
   medusa-db:
      image: postgres:13
      environment:
        POSTGRES_DB: medusa
        POSTGRES_USER: test
        POSTGRES_PASSWORD: test
      restart: always
      volumes:
         - ./database/medusa/existing-schema.pgsql:/docker-entrypoint-initdb.d/1.sql
         - ./database/authorization/access.pgsql:/docker-entrypoint-initdb.d/2.sql
         - medusa-db-data:/var/lib/postgresql/data/
      networks:
         - medusa-network
      expose:
         - "5432"

   postgrest: # pretend this is the Medusa backend
      image: postgrest/postgrest
      ports:
         - "3000:3000"
      links:
         - medusa-db:medusa-db
      depends_on:
         - medusa-db
      environment:
         PGRST_DB_URI: postgres://test:test@medusa-db:5432/medusa
         PGRST_DB_SCHEMA: public
         PGRST_DB_ANON_ROLE: web_anon
         PGRST_SERVER_PROXY_URI: "http://127.0.0.1:3000/"
         PGRST_JWT_SECRET: ${JWT_PUBLIC_KEY}
         PGRST_ROLE_CLAIM_KEY: '.resource_access.frontend.roles[0]'
      networks:
         - medusa-network

networks:
   main-network:  # reachable from outside
      driver: bridge
   medusa-network:   # not reachable from outside
      driver: bridge

volumes:
   keycloak-db-data:
   medusa-db-data:
